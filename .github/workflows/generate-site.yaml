name: "Generate Static Site"
defaults:
  run:
    shell: bash
on:
  workflow_call:
    inputs:
      repos:
        required: false
        type: string
      owner:
        required: false
        type: string
      name:
        required: false
        type: string
      slug:
        required: true
        type: string
      email:
        required: true
        type: string
      publish:
        required: false
        type: boolean
        default: true
    secrets:
      id:
        required: true
      key:
        required: true

env:
  OWNER: ${{ inputs.owner || fromJSON(inputs.repos)[0].owner }}
  REPO: ${{ inputs.name || fromJSON(inputs.repos)[0].name }}

jobs:
  build-site:
    name: "Build Site"
    permissions:
      contents: read
    runs-on: ubuntu-latest
    outputs:
      owner: ${{ steps.id.outputs.owner }}
      name: ${{ steps.id.outputs.name }}
      success: ${{ steps.build-site.outputs.success }}
      is-bot: ${{ steps.is-bot.outputs.bot }}
    container:
      image: ghcr.io/hubverse-org/hub-dash-site-builder:latest
      ports:
        - 80
      volumes:
        - ${{ github.workspace }}:/site
    steps:
      - id: is-bot
        name: "Check if we are running a bot"
        run: |
          if [[ "${{ secrets.id }}" = "none" ]]; then
            bot=false
          else
            bot=true
          fi
          echo "bot is $bot"
          echo "bot=$bot" >> "$GITHUB_OUTPUT"
        shell: bash
      - uses: actions/create-github-app-token@af35edadc00be37caa72ed9f3e6d5f7801bfdf09
        if: ${{ fromJSON(steps.is-bot.outputs.bot) }}
        name: "Generate App Token (if no token present)"
        id: token
        with:
          app-id: ${{ secrets.id }}
          private-key: ${{ secrets.key }}
          owner: ${{ env.OWNER }}
          repositories: ${{ env.REPO }}
      - id: id
        name: "setup run variables"
        run: |
          owner="${{ env.OWNER }}"
          name="${{ env.REPO }}"
          echo "owner=$owner" >> $GITHUB_OUTPUT
          echo "name=$name" >> $GITHUB_OUTPUT
          echo "repo=$owner/$name" >> $GITHUB_OUTPUT
          echo "file=$owner-$name-site" >> $GITHUB_OUTPUT
      - id: checkout
        name: "Fetch ${{ steps.id.outputs.repo }}"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          token: ${{ steps.token.outputs.token || secrets.key }}
          persist-credentials: false
          repository: ${{ steps.id.outputs.repo }}
      - id: check-configs
        name: "Check if we need to build site"
        shell: "bash"
        run: |
          if [[ ! -f site-config.yml ]]; then
            echo "::error title=Missing config (${{ steps.id.outputs.repo }})::No site-config.yml file found. Exiting."
            exit 1
          fi
          if [[ -f predtimechart-config.yml ]]; then
            echo "forecasts=true" >> $GITHUB_OUTPUT
          else
            echo "forecasts=false" >> $GITHUB_OUTPUT
          fi
      - id: build-site
        name: "Render Website"
        run: |
          bash /render.sh \
            "${{ env.OWNER }}" \
            "${{ env.REPO }}" \
            "ptc/data" \
            "" \
            "${{ steps.check-configs.outputs.forecasts }}"
      - name: Upload artifact
        id: upload
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: ${{ steps.id.outputs.file }}
          path: '/site/pages/'
          retention-days: 1
  push-site:
    name: "Push Site"
    permissions:
      contents: write
    needs: [build-site]
    if: ${{ inputs.publish }}
    uses: hubverse-org/hub-dashboard-control-room/.github/workflows/push-things.yaml@main
    with:
      is_bot: ${{ fromJSON(needs.build-site.outputs.is-bot) }}
      branch: "gh-pages"
      artifact: ${{ needs.build-site.outputs.owner }}-${{ needs.build-site.outputs.name }}-site
      owner: ${{ needs.build-site.outputs.owner}}
      name: ${{ needs.build-site.outputs.name }}
      slug: ${{ inputs.slug }}
      email: ${{ inputs.email }}
    secrets: inherit

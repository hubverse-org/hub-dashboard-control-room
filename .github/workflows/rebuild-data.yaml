name: "Rebuild Data"
on:
  workflow_dispatch:
    inputs:
      owner:
        description: "(optional) GitHub username of a dashboard repository"
        type: string
        required: false
        default: null
      name:
        description: "(optional) name of GitHub dashboard repository"
        type: string
        required: false
        default: null
      regenerate:
        description: "(Forecast) Regenerate Model Output Data"
        type: boolean
        required: false
        default: false
      publish:
        description: "Push Data to branch (uncheck for a dry run)"
        type: boolean
        required: false
        default: true
  repository_dispatch:
    types:
      - "data"
      - "targets"
      - "forecasts"

jobs:
  repos:
    uses: hubverse-org/hub-dashboard-control-room/.github/workflows/get-installations.yaml@main
    with:
      newbies: ${{ toJSON(github.event.client_payload.newbies || format('[{{"owner": {}, "name": {}}} }}]', inputs.owner, inputs.name)) }}
    secrets:
      id: ${{ vars.APP_ID }}
      key: ${{ secrets.PRIVATE_KEY }}
  site:
    needs: [repos]
    strategy:
      matrix:
        site: ${{ fromJSON(needs.repos.outputs.repos) }}
    uses: hubverse-org/hub-dashboard-control-room/.github/workflows/generate-data.yaml@main
    with:
      owner: '${{ matrix.site.owner }}'
      name: '${{ matrix.site.name }}'
      slug: '${{ needs.repos.outputs.slug }}'
      email: '${{ needs.repos.outputs.email }}'
      regenerate: ${{ github.event.client_payload.regenerate || inputs.regenerate || false }}
      build: ${{ github.event.client_payload.build || 'both' }}
      publish: ${{ inputs.publish || github.event_name != 'workflow_dispatch' }}
    secrets:
      id: ${{ vars.APP_ID }}
      key: ${{ secrets.PRIVATE_KEY }}

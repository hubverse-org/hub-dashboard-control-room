name: "Build predtimechart dashboard"
on:
  workflow_dispatch:
    inputs:
      repo:
        description: "Repositories to build (space-separated owner/repo list)"
        type: string
        required: false
      publish:
        description: "Publish Site (uncheck for a dry run)"
        type: boolean
        required: false
        default: true

  repository_dispatch:
    types:
      - "registration"
      - "all"
  schedule:
    - cron: "17 19 * * *"

jobs:
  repos:
    uses: hubverse-org/hub-dashboard-control-room/.github/workflows/get-installations.yaml@znk/data-matrix-lift/14
    with:
      newbies: '${{ toJSON(github.event.client_payload.newbies) }}'
      repo: '${{ inputs.repo }}'
    secrets:
      id: ${{ vars.APP_ID }}
      key: ${{ secrets.PRIVATE_KEY }}
  site:
    needs: [repos]
    strategy:
      fail-fast: false
      matrix:
        site: ${{ fromJSON(needs.repos.outputs.repos) }}
    uses: hubverse-org/hub-dashboard-control-room/.github/workflows/generate-site.yaml@main
    with:
      owner: '${{ matrix.site.owner }}'
      name: '${{ matrix.site.name }}'
      slug: '${{ needs.repos.outputs.slug }}'
      email: '${{ needs.repos.outputs.email }}'
      publish: ${{ inputs.publish || github.event_name != 'workflow_dispatch' }}
    secrets:
      id: ${{ vars.APP_ID }}
      key: ${{ secrets.PRIVATE_KEY }}
  data:
    needs: [repos]
    strategy:
      fail-fast: false
      matrix:
        site: ${{ fromJSON(needs.repos.outputs.repos) }}
    uses: hubverse-org/hub-dashboard-control-room/.github/workflows/generate-data.yaml@znk/data-matrix-lift/14
    with:
      owner: '${{ matrix.site.owner }}'
      name: '${{ matrix.site.name }}'
      slug: '${{ needs.repos.outputs.slug }}'
      email: '${{ needs.repos.outputs.email }}'
      regenerate: ${{ github.event.client_payload.regenerate || inputs.regenerate || false }}
      build: ${{ github.event.client_payload.build || 'both' }}
      publish: ${{ inputs.publish || github.event_name != 'workflow_dispatch' }}
    secrets:
      id: ${{ vars.APP_ID }}
      key: ${{ secrets.PRIVATE_KEY }}

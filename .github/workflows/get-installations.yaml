name: "List installed repositories"
on:
  workflow_dispatch:
  workflow_call:
    inputs:
      newbies:
        required: false
        type: string
    secrets:
      id:
        required: true
      key:
        required: true
    outputs:
      repos:
        description: "a list of JSON objects containing 'owner' and 'name'"
        value: ${{ jobs.repos.outputs.repos }}
      slug:
        description: "the app slug"
        value: ${{ jobs.repos.outputs.slug }}
      id:
        description: "the app id"
        value: ${{ jobs.repos.outputs.id }}
      email:
        description: "the app email"
        value: ${{ jobs.repos.outputs.email }}

jobs:
  repos:
    name: "Get list of dashboard repositories"
    env:
      APP_ID: ${{ secrets.id || vars.APP_ID }}
      PRIVATE_KEY: ${{ secrets.key || secrets.PRIVATE_KEY}}
    runs-on: ubuntu-latest
    outputs:
      repos: ${{ steps.repos.outputs.repos }}
      slug: ${{ steps.repos.outputs.slug }}
      id: ${{ steps.repos.outputs.id }}
      email: ${{ steps.repos.outputs.email }}
    steps:
      - id: new-repos
        run: |
          {
            echo "new<<EOF"
            echo '${{ inputs.newbies }}'
            echo "EOF"
          } >> "$GITHUB_OUTPUT"
      - id: checkout
        uses: actions/checkout@v4
        with:
          repository: hubverse-org/hub-dashboard-control-room
          persist-credentials: false
          sparse-checkout: |
            requirements.txt
            appHelper.py
            getInstallations.py
      - id: setup-snake
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
          cache: pip
      - id: install
        run: pip install -r requirements.txt
      - id: repos
        env:
          NEW_REPOS: ${{ steps.new-repos.outputs.new }}
        run: |
          python getInstallations.py
      - id: list-repos
        run: echo '${{ steps.repos.outputs.repos }}'

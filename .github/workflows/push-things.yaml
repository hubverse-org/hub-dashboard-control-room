name: "Push To Branch"
defaults:
  run:
    shell: bash
on:
  workflow_call:
    inputs:
      owner:
        description: 'name of the repository org/owner. Use `${{ github.event.repository.owner.login }}`'
        required: true
        type: string
      name:
        description: 'name of the repository. Use `${{ github.event.repository.name }}`'
        required: true
        type: string
      slug:
        description: 'User id. Use `${{ github.event.repository.owner.login }}` '
        required: true
        type: string
      email:
        description: 'github email for pushing. Use `${{ github.event.repository.owner.id }}+${{ github.event.repository.owner.login }}@users.noreply.github.com`'
        required: true
        type: string
      # the name of the orphan branch to push to
      branch:
        required: true
        type: string
      # the name of the github artifact to download
      artifact:
        required: true
        type: string
      # [boolean] when this is true, then we know that we have to generate a token
      is_bot:
        required: true
        type: boolean
    # This workflow is always called from another re-usable workflow, so you
    # will pass id: ${{ secrets.id }} and key: ${{ secrets.key }}
    secrets:
      # 'none' (for same-repo builds) or the app ID of a GitHub app (cross-repo builds)
      id:
        required: true
      # a GitHub generated token (for same-repo builds) or the Private Key of a GitHub app (cross-repo builds)
      key:
        required: true

jobs:
  push-data:
    name: "Push Data"
    permissions:
      contents: write
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      CWD: ${{ github.workspace }}
      OWNER: ${{ inputs.owner }}
      NAME: ${{ inputs.name }}
      BRANCH: ${{ inputs.branch }}
      SLUG: ${{ inputs.slug }}
      EMAIL: ${{ inputs.email }}
    steps:
      - id: checkout-this-here-repo-scripts
        uses: actions/checkout@v4
        with:
          repository: hubverse-org/hub-dashboard-control-room
          ref: main
          persist-credentials: false
          sparse-checkout: |
            scripts
      - id: id
        name: "setup run variables"
        run: |
          echo "repo=$OWNER/$NAME" >> $GITHUB_OUTPUT
      - uses: actions/create-github-app-token@v2
        if: ${{ fromJSON(inputs.is_bot) }}
        id: token
        with:
          app-id: ${{ secrets.id }}
          private-key: ${{ secrets.key }}
          owner: ${{ inputs.owner }}
          repositories: ${{ inputs.name }}
      - id: check-branch
        env:
          GH_TOKEN: ${{ github.token }}
          REPO: ${{ steps.id.outputs.repo }}
          TOKEN: ${{ steps.token.outputs.token || secrets.key }}
        name: "check for ${{ inputs.branch }} branch and create if needed"
        run: |
          bash -x "$CWD/scripts/check-branch.sh" \
            "$BRANCH" \
            "$REPO" \
            "$SLUG" \
            "$EMAIL" \
            "$TOKEN"
      - id: checkout-data
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          repository: ${{ steps.id.outputs.repo }}
          ref: ${{ inputs.branch }}
          path: 'data'
          token: ${{ steps.token.outputs.token || secrets.key }}
      - id: fetch-artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact }}
      - id: publish
        name: "Publish to ${{ inputs.branch }} branch"
        env:
          REPO: ${{ steps.id.outputs.repo }}
          TOKEN: ${{ steps.token.outputs.token || secrets.key }}
        run: |
          ls -larth
          bash -x "$CWD/scripts/pushit.sh" \
            "$BRANCH" \
            "$REPO" \
            "$SLUG" \
            "$EMAIL" \
            "$TOKEN"
